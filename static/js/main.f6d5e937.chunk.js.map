{"version":3,"sources":["components/Profile/profile.module.css","components/TransactionHistory/transaction.module.css","components/Statistics/statistics.module.css","components/FriendList/friends.module.css","components/Profile/Profile.js","components/Statistics/StatisticItem.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","list","listItem","label","quantity","followers","views","likes","randomColor","Math","floor","random","StatisticItem","percentage","itemWidth","item","style","backgroundColor","width","Statistics","title","length","statistics","statList","map","stat","key","id","defaultProps","FriendListItem","isOnline","statusOn","statusOff","FriendList","friends","friendList","friend","TransactionHistory","items","transactionHistor","transactionTh","indx","transactionTd","transactionOdd","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6d5e937.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__3Mxvs\",\"description\":\"profile_description__3RLS7\",\"avatar\":\"profile_avatar__25kFq\",\"tag\":\"profile_tag__2d4WF\",\"location\":\"profile_location__ZayH2\",\"name\":\"profile_name__2nZMH\",\"list\":\"profile_list__2noog\",\"listItem\":\"profile_listItem__24J8U\",\"label\":\"profile_label__3jijU\",\"quantity\":\"profile_quantity__13qTc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistor\":\"transaction_transactionHistor__3Q6Q2\",\"transactionTh\":\"transaction_transactionTh__5H8Lc\",\"transactionTd\":\"transaction_transactionTd__1h3u4\",\"transactionOdd\":\"transaction_transactionOdd__3e2Cl transaction_transactionTd__1h3u4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__1pNtF\",\"title\":\"statistics_title__1pqxr\",\"statList\":\"statistics_statList__QPlGR\",\"item\":\"statistics_item__2W76S\",\"label\":\"statistics_label__1FMMj\",\"percentage\":\"statistics_percentage__1HDHe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"friends_friendList__35FC6\",\"item\":\"friends_item__Ljkua\",\"status\":\"friends_status__2iLNy\",\"statusOn\":\"friends_statusOn__1d52x friends_status__2iLNy\",\"statusOff\":\"friends_statusOff__3QnvS friends_status__2iLNy\",\"avatar\":\"friends_avatar__8W_pp\",\"name\":\"friends_name__1N40n\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './profile.module.css';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div className={styles.description}>\r\n        <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\r\n        <p className={styles.name}>{name}</p>\r\n        <p className={styles.tag}>{tag}</p>\r\n        <p className={styles.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={styles.list}>\r\n        <li className={styles.listItem}>\r\n          <span className={styles.label}>Followers</span>\r\n          <span className={styles.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li className={styles.listItem}>\r\n          <span className={styles.label}>Views</span>\r\n          <span className={styles.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li className={styles.listItem}>\r\n          <span className={styles.label}>Likes</span>\r\n          <span className={styles.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './statistics.module.css';\r\n\r\nconst randomColor = () => Math.floor(Math.random() * 255);\r\nconst randomBGColor = () =>\r\n  `rgb(${randomColor()},${randomColor()},${randomColor()})`;\r\n\r\nconst StatisticItem = ({ label, percentage, itemWidth }) => {\r\n  return (\r\n    <li\r\n      className={styles.item}\r\n      style={{ backgroundColor: randomBGColor(), width: itemWidth }}>\r\n      <span className={styles.label}>{label}</span>\r\n      <span className={styles.percentage}>{percentage}%</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nStatisticItem.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default StatisticItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport StatisticItem from './StatisticItem';\r\nimport styles from './statistics.module.css';\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  const itemWidth = `${100 / stats.length}%`;\r\n  return (\r\n    <section className={styles.statistics}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      <ul className={styles.statList}>\r\n\r\n        {stats.map(stat => (\r\n          <StatisticItem key={stat.id} {...stat} itemWidth = {itemWidth} />\r\n          // <li\r\n          //   key={stat.id}\r\n          //   className={styles.item}\r\n          //   style={{ backgroundColor: randomBGColor(), width: itemWidth }}>\r\n          //   <span className={styles.label}>{stat.label}</span>\r\n          //   <span className={styles.percentage}>{stat.percentage}%</span>\r\n          // </li>\r\n        ))}\r\n\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\n\r\nStatistics.defaultProps = {\r\n  title: 'Upload stats',\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.object,\r\n  ),\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './friends.module.css';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      {isOnline ? (\r\n        <span className={styles.statusOn}></span>\r\n      ) : (\r\n        <span className={styles.statusOff}></span>\r\n      )}\r\n      <img className={styles.avatar} src={avatar} alt=\"\" width=\"48\" />\r\n      <p className={styles.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem';\r\nimport styles from './friends.module.css';\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={styles.friendList}>\r\n      {friends.map(friend => (\r\n        <FriendListItem key={friend.id} {...friend} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.object,\r\n    ),\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './transaction.module.css';\r\n\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={styles.transactionHistor}>\r\n      <thead>\r\n        <tr>\r\n          <th className={styles.transactionTh}>Type</th>\r\n          <th className={styles.transactionTh}>Amount</th>\r\n          <th className={styles.transactionTh}>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map((item, indx) => {\r\n          return (\r\n          <tr key={item.id}>\r\n            <td className={(indx % 2) ? styles.transactionTd : styles.transactionOdd}>{item.type}</td>\r\n            <td className={(indx % 2) ? styles.transactionTd : styles.transactionOdd}>{item.amount}</td>\r\n            <td className={(indx % 2) ? styles.transactionTd : styles.transactionOdd}>{item.currency}</td>\r\n          </tr>\r\n        )})}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport Profile from './Profile/Profile';\r\nimport Statistics from './Statistics/Statistics';\r\nimport FfiendList from './FriendList/FriendList';\r\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\r\nimport user from './Profile/user.json';\r\nimport statisticalData from './Statistics/statistical-data.json';\r\nimport friends from './FriendList/friends.json';\r\nimport transactions from './TransactionHistory/transactions.json';\r\n\r\nconst App = () => (\r\n  <>\r\n    <Profile {...user} />\r\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n    <FfiendList friends={friends} />\r\n    <TransactionHistory items={transactions} />\r\n  </>\r\n);\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root'),\n);\n \n// Для deploy:\n// https://create-react-app.dev/docs/deployment/\n\n\n// ReactDOM.render(\n//   <Profile\n//     name={user.name}\n//     tag={user.tag}\n//     location={user.location}\n//     avatar={user.avatar}\n//     stats={user.stats}\n//   />,\n//   document.getElementById('root'),\n// );\n\n\n// .prettierrc {\n//   \"printWidth\": 80,\n//   \"tabWidth\": 2,\n//   \"useTabs\": false,\n//   \"semi\": true,\n//   \"singleQuote\": true,\n//   \"trailingComma\": \"all\",\n//   \"bracketSpacing\": true,\n//   \"jsxBracketSameLine\": false,\n//   \"arrowParens\": \"avoid\",\n//   \"proseWrap\": \"always\"\n// }\n//  .lintstagedrc {\n//   \"src/**/*.{json,css,scss,md}\": [\"prettier --write\", \"git add\"],\n//   \"src/**/*.{js,jsx,ts,tsx}\": [\"prettier --write\", \"eslint --fix\", \"git add\"]\n// }\n// video по Linter\n// http://fecore.net.ua/books/rq7s2k-react/lesson-03/\n// https://app.schoology.com/page/2179321672\n// https://www.youtube.com/watch?v=j25TVuFQntA&feature=youtu.be\n"],"sourceRoot":""}